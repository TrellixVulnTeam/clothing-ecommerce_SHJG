{"ast":null,"code":"var _jsxFileName = \"/mnt/primary/my-project/Practices/React/clothing-ecommerce/src/pages/shop/shop.component.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\nimport { collection, firestore, onSnapshot, convertCollectionsSnapShotToMap } from \"../../firebase/firebase.utils\";\nimport { updateCollections } from \"../../redux/shop/shop.actions\";\nimport './shop.styles.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ShopPage extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.unsubscribeFromSnapShot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = collection(firestore, 'collections');\n    onSnapshot(collectionRef, snapShot => {\n      const collectionsMap = convertCollectionsSnapShotToMap(snapShot);\n      updateCollections(collectionsMap);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-page\",\n      children: /*#__PURE__*/_jsxDEV(CollectionsOverview, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/mnt/primary/my-project/Practices/React/clothing-ecommerce/src/pages/shop/shop.component.jsx"],"names":["React","connect","CollectionsOverview","collection","firestore","onSnapshot","convertCollectionsSnapShotToMap","updateCollections","ShopPage","Component","unsubscribeFromSnapShot","componentDidMount","props","collectionRef","snapShot","collectionsMap","render","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,UAAhC,EAA4CC,+BAA5C,QAAmF,+BAAnF;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AAEA,OAAO,oBAAP;;;AAEA,MAAMC,QAAN,SAAuBR,KAAK,CAACS,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCC,uBADqC,GACX,IADW;AAAA;;AAGrCC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEJ,MAAAA;AAAF,QAAwB,KAAKK,KAAnC;AACA,UAAMC,aAAa,GAAGV,UAAU,CAACC,SAAD,EAAY,aAAZ,CAAhC;AACAC,IAAAA,UAAU,CAACQ,aAAD,EAAiBC,QAAD,IAAc;AACtC,YAAMC,cAAc,GAAGT,+BAA+B,CAACQ,QAAD,CAAtD;AACAP,MAAAA,iBAAiB,CAACQ,cAAD,CAAjB;AACD,KAHS,CAAV;AAID;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACE,QAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAlBoC;;AAsBvC,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AACtCX,EAAAA,iBAAiB,EAAEQ,cAAc,IAAIG,QAAQ,CAACX,iBAAiB,CAAEQ,cAAF,CAAlB;AADP,CAAL,CAAnC;;AAIA,eAAed,OAAO,CAAC,IAAD,EAAOgB,kBAAP,CAAP,CAAkCT,QAAlC,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\nimport { collection, firestore, onSnapshot, convertCollectionsSnapShotToMap } from \"../../firebase/firebase.utils\";\nimport { updateCollections } from \"../../redux/shop/shop.actions\";\n\nimport './shop.styles.scss';\n\nclass ShopPage extends React.Component {\n  unsubscribeFromSnapShot = null;\n\n  componentDidMount() {\n    const { updateCollections } = this.props;\n    const collectionRef = collection(firestore, 'collections');\n    onSnapshot(collectionRef, (snapShot) => {\n      const collectionsMap = convertCollectionsSnapShotToMap(snapShot);\n      updateCollections(collectionsMap);\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"shop-page\">\n        <CollectionsOverview />\n      </div>\n    )\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections((collectionsMap)))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}