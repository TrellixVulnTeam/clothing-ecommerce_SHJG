{"ast":null,"code":"import { all, call, put, takeLatest } from \"redux-saga/effects\";\nimport { firestore, collection, getDocs, convertCollectionsSnapShotToMap } from \"../../firebase/firebase.utils\";\nimport { fetchCollectionsFailure, fetchCollectionsSuccess } from \"./shop.actions\";\nimport ShopActionTypes from \"./shop.types\";\nexport function* fetchCollectionsAsync() {\n  try {\n    const collectionRef = collection(firestore, \"collections\");\n    const snapshot = yield getDocs(collectionRef);\n    const collectionsMap = yield call(convertCollectionsSnapShotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\nexport function* fetchCollectionsStart() {\n  yield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}\nexport function* shopSagas() {\n  yield all([call(fetchCollectionsStart)]);\n}","map":{"version":3,"sources":["/run/media/samsul/primary/my-project/Practices/React/clothing-ecommerce/src/redux/shop/shop.sagas.js"],"names":["all","call","put","takeLatest","firestore","collection","getDocs","convertCollectionsSnapShotToMap","fetchCollectionsFailure","fetchCollectionsSuccess","ShopActionTypes","fetchCollectionsAsync","collectionRef","snapshot","collectionsMap","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START","shopSagas"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,UAAzB,QAA2C,oBAA3C;AACA,SACEC,SADF,EAEEC,UAFF,EAGEC,OAHF,EAIEC,+BAJF,QAKO,+BALP;AAMA,SACEC,uBADF,EAEEC,uBAFF,QAGO,gBAHP;AAKA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACvC,MAAI;AACF,UAAMC,aAAa,GAAGP,UAAU,CAACD,SAAD,EAAY,aAAZ,CAAhC;AACA,UAAMS,QAAQ,GAAG,MAAMP,OAAO,CAACM,aAAD,CAA9B;AACA,UAAME,cAAc,GAAG,MAAMb,IAAI,CAC/BM,+BAD+B,EAE/BM,QAF+B,CAAjC;AAIA,UAAMX,GAAG,CAACO,uBAAuB,CAACK,cAAD,CAAxB,CAAT;AACD,GARD,CAQE,OAAOC,KAAP,EAAc;AACd,UAAMb,GAAG,CAACM,uBAAuB,CAACO,KAAK,CAACC,OAAP,CAAxB,CAAT;AACD;AACF;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMd,UAAU,CACdO,eAAe,CAACQ,uBADF,EAEdP,qBAFc,CAAhB;AAID;AAED,OAAO,UAAUQ,SAAV,GAAsB;AAC3B,QAAMnB,GAAG,CAAC,CAACC,IAAI,CAACgB,qBAAD,CAAL,CAAD,CAAT;AACD","sourcesContent":["import { all, call, put, takeLatest } from \"redux-saga/effects\";\nimport {\n  firestore,\n  collection,\n  getDocs,\n  convertCollectionsSnapShotToMap,\n} from \"../../firebase/firebase.utils\";\nimport {\n  fetchCollectionsFailure,\n  fetchCollectionsSuccess,\n} from \"./shop.actions\";\n\nimport ShopActionTypes from \"./shop.types\";\n\nexport function* fetchCollectionsAsync() {\n  try {\n    const collectionRef = collection(firestore, \"collections\");\n    const snapshot = yield getDocs(collectionRef);\n    const collectionsMap = yield call(\n      convertCollectionsSnapShotToMap,\n      snapshot\n    );\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\n\nexport function* fetchCollectionsStart() {\n  yield takeLatest(\n    ShopActionTypes.FETCH_COLLECTIONS_START,\n    fetchCollectionsAsync\n  );\n}\n\nexport function* shopSagas() {\n  yield all([call(fetchCollectionsStart)]);\n}\n"]},"metadata":{},"sourceType":"module"}