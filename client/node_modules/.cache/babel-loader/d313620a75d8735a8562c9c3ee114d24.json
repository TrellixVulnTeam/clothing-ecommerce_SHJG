{"ast":null,"code":"var _jsxFileName = \"/mnt/primary/my-project/Practices/React/clothing-ecommerce/src/pages/shop/shop.component.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { Routes, Route } from \"react-router-dom\";\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\nimport CollectionsOverviewContainer from \"../../components/collections-overview/collections-overview.container\";\nimport { fetchCollectionsStartAsync } from \"../../redux/shop/shop.actions\";\nimport { selectIsCollectionFetching, selectIsCollectionsLoaded } from \"../../redux/shop/shop.selector\";\nimport CollectionPageContainer from \"../collection/collection.container\";\nimport './shop.styles.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n_c = CollectionPageWithSpinner;\n\nclass ShopPage extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapShot = null;\n  }\n\n  componentDidMount() {\n    const {\n      fetchCollectionsStartAsync\n    } = this.props;\n    fetchCollectionsStartAsync();\n  }\n\n  componentWillUnmount() {// this.unsubscribeFromSnapShot();\n  }\n\n  render() {\n    const {\n      isCollectionsLoaded\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-page\",\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(CollectionsOverviewContainer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/:collectionId\",\n          element: /*#__PURE__*/_jsxDEV(CollectionPageContainer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 49\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionsLoaded: selectIsCollectionsLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"CollectionPageWithSpinner\");","map":{"version":3,"sources":["/mnt/primary/my-project/Practices/React/clothing-ecommerce/src/pages/shop/shop.component.jsx"],"names":["React","connect","createStructuredSelector","Routes","Route","WithSpinner","CollectionsOverviewContainer","fetchCollectionsStartAsync","selectIsCollectionFetching","selectIsCollectionsLoaded","CollectionPageContainer","CollectionPageWithSpinner","CollectionPage","ShopPage","Component","state","loading","unsubscribeFromSnapShot","componentDidMount","props","componentWillUnmount","render","isCollectionsLoaded","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,kBAA9B;AAEA,OAAOC,WAAP,MAAwB,sDAAxB;AACA,OAAOC,4BAAP,MAAyC,sEAAzC;AACA,SAASC,0BAAT,QAA2C,+BAA3C;AACA,SAASC,0BAAT,EAAqCC,yBAArC,QAAsE,gCAAtE;AACA,OAAOC,uBAAP,MAAoC,oCAApC;AAEA,OAAO,oBAAP;;AAEA,MAAMC,yBAAyB,GAAGN,WAAW,CAACO,cAAD,CAA7C;KAAMD,yB;;AACN,MAAME,QAAN,SAAuBb,KAAK,CAACc,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCC,KADqC,GAC7B;AACNC,MAAAA,OAAO,EAAE;AADH,KAD6B;AAAA,SAKrCC,uBALqC,GAKX,IALW;AAAA;;AAOrCC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEX,MAAAA;AAAF,QAAiC,KAAKY,KAA5C;AACAZ,IAAAA,0BAA0B;AAC3B;;AAEDa,EAAAA,oBAAoB,GAAG,CACrB;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAA0B,KAAKH,KAArC;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACE,QAAC,MAAD;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,GAAZ;AAAgB,UAAA,OAAO,eAAE,QAAC,4BAAD;AAAA;AAAA;AAAA;AAAA;AAAzB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,gBAAZ;AAA6B,UAAA,OAAO,eAAE,QAAC,uBAAD;AAAA;AAAA;AAAA;AAAA;AAAtC;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAQD;;AA1BoC;;AA8BvC,MAAMI,eAAe,GAAGrB,wBAAwB,CAAC;AAC/CoB,EAAAA,mBAAmB,EAAEb;AAD0B,CAAD,CAAhD;;AAIA,MAAMe,kBAAkB,GAAGC,QAAQ,KAAK;AACtClB,EAAAA,0BAA0B,EAAE,MAAMkB,QAAQ,CAAClB,0BAA0B,EAA3B;AADJ,CAAL,CAAnC;;AAIA,eAAeN,OAAO,CAACsB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CX,QAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { Routes, Route } from \"react-router-dom\";\n\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\nimport CollectionsOverviewContainer from \"../../components/collections-overview/collections-overview.container\";\nimport { fetchCollectionsStartAsync } from \"../../redux/shop/shop.actions\";\nimport { selectIsCollectionFetching, selectIsCollectionsLoaded } from \"../../redux/shop/shop.selector\";\nimport CollectionPageContainer from \"../collection/collection.container\";\n\nimport './shop.styles.scss';\n\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\nclass ShopPage extends React.Component {\n  state = {\n    loading: true,\n  }\n\n  unsubscribeFromSnapShot = null;\n\n  componentDidMount() {\n    const { fetchCollectionsStartAsync } = this.props;\n    fetchCollectionsStartAsync();\n  }\n\n  componentWillUnmount() {\n    // this.unsubscribeFromSnapShot();\n  }\n\n  render() {\n    const { isCollectionsLoaded } = this.props;\n    return (\n      <div className=\"shop-page\">\n        <Routes>\n          <Route path=\"/\" element={<CollectionsOverviewContainer />} />\n          <Route path=\"/:collectionId\" element={<CollectionPageContainer />} />\n        </Routes>\n      </div>\n    )\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionsLoaded: selectIsCollectionsLoaded\n})\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}