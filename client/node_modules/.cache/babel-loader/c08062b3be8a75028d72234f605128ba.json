{"ast":null,"code":"import { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport UserActionTypes from \"./user.types\";\nimport { googleProvider, auth, createUserProfileDocument, signInWithPopup, getDoc, signInWithEmailAndPassword, createUserWithEmailAndPassword, getCurrentUser } from \"../../firebase/firebase.utils\";\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure } from \"./user.actions\";\nexport function* getSnapShotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield getDoc(userRef);\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapShotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield signInWithPopup(auth, googleProvider);\n    yield getSnapShotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail(_ref) {\n  let {\n    payload: {\n      email,\n      password\n    }\n  } = _ref;\n\n  try {\n    const {\n      user\n    } = yield signInWithEmailAndPassword(auth, email, password);\n    yield getSnapShotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* signUp(_ref2) {\n  let {\n    payload: {\n      displayName,\n      email,\n      password\n    }\n  } = _ref2;\n\n  try {\n    const {\n      user\n    } = yield createUserWithEmailAndPassword(auth, email, password);\n    getSnapShotFromUserAuth(user, {\n      displayName\n    });\n    yield createUserProfileDocument(user, {\n      displayName\n    }); // this.setState({\n    //   displayName: '',\n    //   email: '',\n    //   password: '',\n    //   confirmPassword: ''\n    // })\n  } catch (error) {\n    console.log(\"error\", error);\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(isUserAuthenticated), call(onSignOutStart)]);\n}","map":{"version":3,"sources":["/run/media/samsul/primary/my-project/Practices/React/clothing-ecommerce/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","googleProvider","auth","createUserProfileDocument","signInWithPopup","getDoc","signInWithEmailAndPassword","createUserWithEmailAndPassword","getCurrentUser","signInSuccess","signInFailure","signOutSuccess","signOutFailure","getSnapShotFromUserAuth","userAuth","userRef","userSnapshot","id","data","error","isUserAuthenticated","signInWithGoogle","user","signInWithEmail","payload","email","password","signOut","signUp","displayName","console","log","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","onSignUpStart","SIGN_UP_START","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call } from \"redux-saga/effects\";\n\nimport UserActionTypes from \"./user.types\";\nimport {\n  googleProvider,\n  auth,\n  createUserProfileDocument,\n  signInWithPopup,\n  getDoc,\n  signInWithEmailAndPassword,\n  createUserWithEmailAndPassword,\n  getCurrentUser,\n} from \"../../firebase/firebase.utils\";\nimport {\n  signInSuccess,\n  signInFailure,\n  signOutSuccess,\n  signOutFailure,\n} from \"./user.actions\";\n\nexport function* getSnapShotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield getDoc(userRef);\n    yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapShotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* signInWithGoogle() {\n  try {\n    const { user } = yield signInWithPopup(auth, googleProvider);\n    yield getSnapShotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* signInWithEmail({ payload: { email, password } }) {\n  try {\n    const { user } = yield signInWithEmailAndPassword(auth, email, password);\n    yield getSnapShotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\n\nexport function* signUp({ payload: { displayName, email, password } }) {\n  try {\n    const { user } = yield createUserWithEmailAndPassword(\n      auth,\n      email,\n      password\n    );\n    getSnapShotFromUserAuth(user, { displayName });\n    yield createUserProfileDocument(user, { displayName });\n    // this.setState({\n    //   displayName: '',\n    //   email: '',\n    //   password: '',\n    //   confirmPassword: ''\n    // })\n  } catch (error) {\n    console.log(\"error\", error);\n  }\n}\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\n\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\n\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\n\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\n\nexport function* userSagas() {\n  yield all([\n    call(onGoogleSignInStart),\n    call(onEmailSignInStart),\n    call(isUserAuthenticated),\n    call(onSignOutStart),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}