{"ast":null,"code":"import { initializeApp } from \"firebase/app\";\nimport { getAuth, createUserWithEmailAndPassword, GoogleAuthProvider, signInWithPopup } from \"firebase/auth\"; // import { getFirestore, getDoc, setDoc } from \"firebase/firestore/lite\";\n\nimport { onSnapshot, doc, getFirestore, getDoc, setDoc } from \"firebase/firestore\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAna6Z0z9wqhmtmqxnIiErT3gFuGlHDSpI\",\n  authDomain: \"clothing-ecommerce-2.firebaseapp.com\",\n  projectId: \"clothing-ecommerce-2\",\n  storageBucket: \"clothing-ecommerce-2.appspot.com\",\n  messagingSenderId: \"677445617495\",\n  appId: \"1:677445617495:web:8a1bcaec5a0ac954e32012\"\n};\nconst firebase = initializeApp(firebaseConfig);\nconst firestore = getFirestore(firebase);\nconst auth = getAuth();\nconst provider = new GoogleAuthProvider();\n\nconst signInWithGoogle = () => signInWithPopup(auth, provider);\n\nconst createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`/users/${userAuth.uid}`);\n  const snapShot = await getDoc(userRef);\n  console.log(\"useRef-1\", userRef);\n  onSnapshot(userRef, doc => {\n    console.log(\"onSnapShot1\", doc.data());\n  });\n\n  if (!snapShot.exists()) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await setDoc(userRef, {\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log(\"error creating user\", error.message);\n    }\n  }\n\n  return userRef;\n};\n\nexport { firebase, auth, firestore, onSnapshot, signInWithGoogle, createUserProfileDocument };","map":{"version":3,"sources":["/mnt/primary/my-project/Practices/React/clothing-ecommerce/src/firebase/firebase.utils.js"],"names":["initializeApp","getAuth","createUserWithEmailAndPassword","GoogleAuthProvider","signInWithPopup","onSnapshot","doc","getFirestore","getDoc","setDoc","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebase","firestore","auth","provider","signInWithGoogle","createUserProfileDocument","userAuth","additionalData","userRef","uid","snapShot","console","log","data","exists","displayName","email","createdAt","Date","error","message"],"mappings":"AAAA,SAASA,aAAT,QAA8B,cAA9B;AACA,SACEC,OADF,EAEEC,8BAFF,EAGEC,kBAHF,EAIEC,eAJF,QAKO,eALP,C,CAMA;;AACA,SAASC,UAAT,EAAqBC,GAArB,EAA0BC,YAA1B,EAAwCC,MAAxC,EAAgDC,MAAhD,QAA8D,oBAA9D;AAEA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,MAAM,EAAE,yCADa;AAErBC,EAAAA,UAAU,EAAE,sCAFS;AAGrBC,EAAAA,SAAS,EAAE,sBAHU;AAIrBC,EAAAA,aAAa,EAAE,kCAJM;AAKrBC,EAAAA,iBAAiB,EAAE,cALE;AAMrBC,EAAAA,KAAK,EAAE;AANc,CAAvB;AASA,MAAMC,QAAQ,GAAGjB,aAAa,CAACU,cAAD,CAA9B;AACA,MAAMQ,SAAS,GAAGX,YAAY,CAACU,QAAD,CAA9B;AACA,MAAME,IAAI,GAAGlB,OAAO,EAApB;AACA,MAAMmB,QAAQ,GAAG,IAAIjB,kBAAJ,EAAjB;;AACA,MAAMkB,gBAAgB,GAAG,MAAMjB,eAAe,CAACe,IAAD,EAAOC,QAAP,CAA9C;;AAEA,MAAME,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AACpE,MAAI,CAACD,QAAL,EAAe;AAEf,QAAME,OAAO,GAAGP,SAAS,CAACZ,GAAV,CAAe,UAASiB,QAAQ,CAACG,GAAI,EAArC,CAAhB;AACA,QAAMC,QAAQ,GAAG,MAAMnB,MAAM,CAACiB,OAAD,CAA7B;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBJ,OAAxB;AACApB,EAAAA,UAAU,CAACoB,OAAD,EAAWnB,GAAD,IAAS;AAC3BsB,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BvB,GAAG,CAACwB,IAAJ,EAA3B;AACD,GAFS,CAAV;;AAGA,MAAI,CAACH,QAAQ,CAACI,MAAT,EAAL,EAAwB;AACtB,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAAyBV,QAA/B;AACA,UAAMW,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AACA,QAAI;AACF,YAAM1B,MAAM,CAACgB,OAAD,EAAU;AACpBO,QAAAA,WADoB;AAEpBC,QAAAA,KAFoB;AAGpBC,QAAAA,SAHoB;AAIpB,WAAGV;AAJiB,OAAV,CAAZ;AAMD,KAPD,CAOE,OAAOY,KAAP,EAAc;AACdR,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCO,KAAK,CAACC,OAAzC;AACD;AACF;;AAED,SAAOZ,OAAP;AACD,CAzBD;;AA2BA,SACER,QADF,EAEEE,IAFF,EAGED,SAHF,EAIEb,UAJF,EAKEgB,gBALF,EAMEC,yBANF","sourcesContent":["import { initializeApp } from \"firebase/app\";\nimport {\n  getAuth,\n  createUserWithEmailAndPassword,\n  GoogleAuthProvider,\n  signInWithPopup,\n} from \"firebase/auth\";\n// import { getFirestore, getDoc, setDoc } from \"firebase/firestore/lite\";\nimport { onSnapshot, doc, getFirestore, getDoc, setDoc } from \"firebase/firestore\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAna6Z0z9wqhmtmqxnIiErT3gFuGlHDSpI\",\n  authDomain: \"clothing-ecommerce-2.firebaseapp.com\",\n  projectId: \"clothing-ecommerce-2\",\n  storageBucket: \"clothing-ecommerce-2.appspot.com\",\n  messagingSenderId: \"677445617495\",\n  appId: \"1:677445617495:web:8a1bcaec5a0ac954e32012\",\n};\n\nconst firebase = initializeApp(firebaseConfig);\nconst firestore = getFirestore(firebase);\nconst auth = getAuth();\nconst provider = new GoogleAuthProvider();\nconst signInWithGoogle = () => signInWithPopup(auth, provider);\n\nconst createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n\n  const userRef = firestore.doc(`/users/${userAuth.uid}`);\n  const snapShot = await getDoc(userRef);\n  console.log(\"useRef-1\", userRef);\n  onSnapshot(userRef, (doc) => {\n    console.log(\"onSnapShot1\", doc.data());\n  });\n  if (!snapShot.exists()) {\n    const { displayName, email } = userAuth;\n    const createdAt = new Date();\n    try {\n      await setDoc(userRef, {\n        displayName,\n        email,\n        createdAt,\n        ...additionalData,\n      });\n    } catch (error) {\n      console.log(\"error creating user\", error.message);\n    }\n  }\n\n  return userRef;\n};\n\nexport {\n  firebase,\n  auth,\n  firestore,\n  onSnapshot,\n  signInWithGoogle,\n  createUserProfileDocument,\n};\n"]},"metadata":{},"sourceType":"module"}