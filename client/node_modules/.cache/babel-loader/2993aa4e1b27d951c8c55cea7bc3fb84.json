{"ast":null,"code":"import { takeEvery, call, put, takeLatest } from \"redux-saga/effects\";\nimport { firestore, collection, getDocs, convertCollectionsSnapShotToMap } from \"../../firebase/firebase.utils\";\nimport { fetchCollectionsFailure, fetchCollectionsSuccess } from \"./shop.actions\";\nimport ShopActionTypes from \"./shop.types\";\nexport function* fetchCollectionsAsync() {\n  yield console.log(\"I am fired\");\n\n  try {\n    const collectionRef = collection(firestore, \"collections\");\n    const snapshot = yield getDocs(collectionRef);\n    const collectionsMap = yield call(convertCollectionsSnapShotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\nexport function* fetchCollectionsStart() {\n  yield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/run/media/samsul/primary/my-project/Practices/React/clothing-ecommerce/src/redux/shop/shop.sagas.js"],"names":["takeEvery","call","put","takeLatest","firestore","collection","getDocs","convertCollectionsSnapShotToMap","fetchCollectionsFailure","fetchCollectionsSuccess","ShopActionTypes","fetchCollectionsAsync","console","log","collectionRef","snapshot","collectionsMap","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,EAA+BC,UAA/B,QAAiD,oBAAjD;AACA,SACEC,SADF,EAEEC,UAFF,EAGEC,OAHF,EAIEC,+BAJF,QAKO,+BALP;AAMA,SACEC,uBADF,EAEEC,uBAFF,QAGO,gBAHP;AAKA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;;AACA,MAAI;AACF,UAAMC,aAAa,GAAGT,UAAU,CAACD,SAAD,EAAY,aAAZ,CAAhC;AACA,UAAMW,QAAQ,GAAG,MAAMT,OAAO,CAACQ,aAAD,CAA9B;AACA,UAAME,cAAc,GAAG,MAAMf,IAAI,CAC/BM,+BAD+B,EAE/BQ,QAF+B,CAAjC;AAIA,UAAMb,GAAG,CAACO,uBAAuB,CAACO,cAAD,CAAxB,CAAT;AACD,GARD,CAQE,OAAOC,KAAP,EAAc;AACd,UAAMf,GAAG,CAACM,uBAAuB,CAACS,KAAK,CAACC,OAAP,CAAxB,CAAT;AACD;AACF;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMhB,UAAU,CACdO,eAAe,CAACU,uBADF,EAEdT,qBAFc,CAAhB;AAID","sourcesContent":["import { takeEvery, call, put, takeLatest } from \"redux-saga/effects\";\nimport {\n  firestore,\n  collection,\n  getDocs,\n  convertCollectionsSnapShotToMap,\n} from \"../../firebase/firebase.utils\";\nimport {\n  fetchCollectionsFailure,\n  fetchCollectionsSuccess,\n} from \"./shop.actions\";\n\nimport ShopActionTypes from \"./shop.types\";\n\nexport function* fetchCollectionsAsync() {\n  yield console.log(\"I am fired\");\n  try {\n    const collectionRef = collection(firestore, \"collections\");\n    const snapshot = yield getDocs(collectionRef);\n    const collectionsMap = yield call(\n      convertCollectionsSnapShotToMap,\n      snapshot\n    );\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\n\nexport function* fetchCollectionsStart() {\n  yield takeLatest(\n    ShopActionTypes.FETCH_COLLECTIONS_START,\n    fetchCollectionsAsync\n  );\n}\n"]},"metadata":{},"sourceType":"module"}