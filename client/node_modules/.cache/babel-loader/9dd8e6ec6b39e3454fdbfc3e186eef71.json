{"ast":null,"code":"import { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport UserActionTypes from \"./user.types\";\nimport { googleProvider, auth, createUserProfileDocument, signInWithPopup, getDoc, signInWithEmailAndPassword } from \"../../firebase/firebase.utils\";\nimport { googleSignInFailure, googleSignInSuccess, signInSuccess, signInFailure } from \"./user.actions\";\nexport function* getSnapShotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield getDoc(userRef);\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield signInWithPopup(auth, googleProvider);\n    yield getSnapShotFromUserAuth(user);\n  } catch (error) {\n    yield put(googleSignInFailure(error));\n  }\n}\nexport function* signInWithEmail(_ref) {\n  let {\n    payload: {\n      email,\n      password\n    }\n  } = _ref;\n\n  try {\n    const {\n      user\n    } = yield signInWithEmailAndPassword(auth, email, password);\n    yield getSnapShotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["/run/media/samsul/primary/my-project/Practices/React/clothing-ecommerce/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","googleProvider","auth","createUserProfileDocument","signInWithPopup","getDoc","signInWithEmailAndPassword","googleSignInFailure","googleSignInSuccess","signInSuccess","signInFailure","getSnapShotFromUserAuth","userAuth","userRef","userSnapshot","id","data","error","signInWithGoogle","user","signInWithEmail","payload","email","password","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SACEC,cADF,EAEEC,IAFF,EAGEC,yBAHF,EAIEC,eAJF,EAKEC,MALF,EAMEC,0BANF,QAOO,+BAPP;AAQA,SACEC,mBADF,EAEEC,mBAFF,EAGEC,aAHF,EAIEC,aAJF,QAKO,gBALP;AAOA,OAAO,UAAUC,uBAAV,CAAkCC,QAAlC,EAA4C;AACjD,MAAI;AACF,UAAMC,OAAO,GAAG,MAAMd,IAAI,CAACI,yBAAD,EAA4BS,QAA5B,CAA1B;AACA,UAAME,YAAY,GAAG,MAAMT,MAAM,CAACQ,OAAD,CAAjC;AACA,UAAMhB,GAAG,CAACY,aAAa,CAAC;AAAEM,MAAAA,EAAE,EAAED,YAAY,CAACC,EAAnB;AAAuB,SAAGD,YAAY,CAACE,IAAb;AAA1B,KAAD,CAAd,CAAT;AACD,GAJD,CAIE,OAAOC,KAAP,EAAc;AACd,UAAMpB,GAAG,CAACa,aAAa,CAACO,KAAD,CAAd,CAAT;AACD;AACF;AAED,OAAO,UAAUC,gBAAV,GAA6B;AAClC,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMf,eAAe,CAACF,IAAD,EAAOD,cAAP,CAAtC;AACA,UAAMU,uBAAuB,CAACQ,IAAD,CAA7B;AACD,GAHD,CAGE,OAAOF,KAAP,EAAc;AACd,UAAMpB,GAAG,CAACU,mBAAmB,CAACU,KAAD,CAApB,CAAT;AACD;AACF;AAED,OAAO,UAAUG,eAAV,OAA4D;AAAA,MAAlC;AAAEC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT;AAAX,GAAkC;;AACjE,MAAI;AACF,UAAM;AAAEJ,MAAAA;AAAF,QAAW,MAAMb,0BAA0B,CAACJ,IAAD,EAAOoB,KAAP,EAAcC,QAAd,CAAjD;AACA,UAAMZ,uBAAuB,CAACQ,IAAD,CAA7B;AACD,GAHD,CAGE,OAAOF,KAAP,EAAc;AACd,UAAMpB,GAAG,CAACa,aAAa,CAACO,KAAD,CAAd,CAAT;AACD;AACF;AAED,OAAO,UAAUO,mBAAV,GAAgC;AACrC,QAAM5B,UAAU,CAACI,eAAe,CAACyB,oBAAjB,EAAuCP,gBAAvC,CAAhB;AACD;AAED,OAAO,UAAUQ,kBAAV,GAA+B;AACpC,QAAM9B,UAAU,CAACI,eAAe,CAAC2B,mBAAjB,EAAsCP,eAAtC,CAAhB;AACD;AAED,OAAO,UAAUQ,SAAV,GAAsB;AAC3B,QAAM9B,GAAG,CAAC,CAACC,IAAI,CAACyB,mBAAD,CAAL,EAA4BzB,IAAI,CAAC2B,kBAAD,CAAhC,CAAD,CAAT;AACD","sourcesContent":["import { takeLatest, put, all, call } from \"redux-saga/effects\";\n\nimport UserActionTypes from \"./user.types\";\nimport {\n  googleProvider,\n  auth,\n  createUserProfileDocument,\n  signInWithPopup,\n  getDoc,\n  signInWithEmailAndPassword,\n} from \"../../firebase/firebase.utils\";\nimport {\n  googleSignInFailure,\n  googleSignInSuccess,\n  signInSuccess,\n  signInFailure,\n} from \"./user.actions\";\n\nexport function* getSnapShotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield getDoc(userRef);\n    yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* signInWithGoogle() {\n  try {\n    const { user } = yield signInWithPopup(auth, googleProvider);\n    yield getSnapShotFromUserAuth(user);\n  } catch (error) {\n    yield put(googleSignInFailure(error));\n  }\n}\n\nexport function* signInWithEmail({ payload: { email, password } }) {\n  try {\n    const { user } = yield signInWithEmailAndPassword(auth, email, password);\n    yield getSnapShotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\n\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}\n"]},"metadata":{},"sourceType":"module"}